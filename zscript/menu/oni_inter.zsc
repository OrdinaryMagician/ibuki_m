// intermission stat screen
Class OniStatScreen : StatusScreen
{
	TextureID bgtex;
	TextureID ibukitex[3];
	TitleSmoke smk[128];
	Shape2D smk_shape;
	Shape2DTransform smk_tform;
	TextureID smk_tex[8];
	TextureID logotex[4];
	TextureID gradtex;
	int glarestr;
	double FracTic;

	override void Start( wbstartstruct wbstartstruct )
	{
		Super.Start(wbstartstruct);
		// support for old author text style
		int iof = lnametexts[0].IndexOf(" - by: ");
		if ( iof != -1 )
		{
			authortexts[0] = lnametexts[0].Mid(iof+7);
			lnametexts[0].Truncate(iof);
		}
		iof = lnametexts[1].IndexOf(" - by: ");
		if ( iof != -1 )
		{
			authortexts[1] = lnametexts[1].Mid(iof+7);
			lnametexts[1].Truncate(iof);
		}
	}
	override void StartMusic()
	{
		S_ChangeMusic("music/ibuki_intermus.ogg");
	}
	private void TickSmokeLayers()
	{
		for ( int i=0; i<128; i++ )
		{
			int presim = 0;
			if ( smk[i].age >= smk[i].maxage )
			{
				if ( smk[i].maxage == 0 ) presim = Random[UIStuff](0,60);
				else presim = -1;
				smk[i].age = Random[UIStuff](-20,0);
				smk[i].maxage = Random[UIStuff](60,120);
				smk[i].pos = (FRandom[UIStuff](-512.,512.),FRandom[UIStuff](0.,256.));
				smk[i].vel = (FRandom[UIStuff](-1.,3.),FRandom[UIStuff](-2.,-6.));
				smk[i].ang = FRandom[UIStuff](0.,360.);
				smk[i].angvel = FRandom[UIStuff](1.,4.)*RandomPick[UIStuff](-1,1);
				smk[i].scale = FRandom[UIStuff](256.,512.);
			}
			for ( int j=0; j<=presim; j++ )
			{
				smk[i].age++;
				if ( smk[i].age <= 0 ) continue;
				smk[i].pos += smk[i].vel;
				smk[i].ang += smk[i].angvel;
			}
		}
	}
	private void RenderSmokeLayer( double GameSecs, bool back, double alpha = 1., double disp = 0., bool zoomout = false )
	{
		if ( !smk_shape )
		{
			smk_shape = new("Shape2D");
			smk_shape.PushVertex((-1,-1));
			smk_shape.PushVertex((1,-1));
			smk_shape.PushVertex((-1,1));
			smk_shape.PushVertex((1,1));
			smk_shape.PushCoord((0,0));
			smk_shape.PushCoord((1,0));
			smk_shape.PushCoord((0,1));
			smk_shape.PushCoord((1,1));
			smk_shape.PushTriangle(0,3,1);
			smk_shape.PushTriangle(0,2,3);
		}
		if ( !smk_tform ) smk_tform = new("Shape2DTransform");
		double zoomscl = Screen.GetHeight()/(zoomout?600:400.);
		int imin = back?64:0;
		int imax = back?128:64;
		int base = zoomout?(back?450:750):(back?500:300);
		for ( int i=imin; i<imax; i++ )
		{
			if ( !smk_tex[i%8] ) smk_tex[i%8] = TexMan.CheckForTexture("graphics/title_smoke_"..(i%8)..".png",TexMan.Type_Any);
			smk_tform.Clear();
			// base transforms
			smk_tform.Scale((1,1)*smk[i].scale);
			smk_tform.Rotate(smk[i].ang+smk[i].angvel*FracTic);
			smk_tform.Translate(smk[i].pos+smk[i].vel*FracTic);
			// screen transforms
			smk_tform.Translate((0,base+disp));
			smk_tform.Scale((1,1)*zoomscl);
			smk_tform.Translate((Screen.GetWidth()/2,0));
			smk_shape.SetTransform(smk_tform);
			double alf = cos((smk[i].age/double(smk[i].maxage))*90)*alpha;
			alf *= clamp(smk[i].age/10.,0,1);
			Screen.DrawShape(smk_tex[i%8],false,smk_shape,DTA_Alpha,alf,DTA_LegacyRenderStyle,STYLE_AddShaded,DTA_FillColor,Color(4,16,48));
		}
	}
	// heh
	private clearscope double smerp( double a ) const
	{
		return (sin((a-.5)*180.)+1.)/2.;
	}
	private void drawSWWMBg()
	{
		double GameSecs = (bcnt+FracTic)/GameTicRate;
		if ( oni_fuzz )
		{
			if ( !bgtex ) bgtex = TexMan.CheckForTexture("graphics/tempbg.png",TexMan.Type_Any);
			Vector2 tsize = TexMan.GetScaledSize(bgtex);
			double zoom = max(ceil(Screen.GetWidth()/tsize.x),ceil(Screen.GetHeight()/tsize.y));
			Vector2 vsize = (Screen.GetWidth(),Screen.GetHeight())/zoom;
			Screen.DrawTexture(bgtex,false,(vsize.x-tsize.x)/2,(vsize.y-tsize.y)/2,DTA_VirtualWidthF,vsize.x,DTA_VirtualHeightF,vsize.y,DTA_KeepRatio,true,DTA_ColorOverlay,Color(128,0,0,0));
			Screen.Dim(Color(16,0,0),1.-clamp(GameSecs,.1,1.),0,0,Screen.GetWidth(),Screen.GetHeight());
		}
		else Screen.Dim(Color(16,0,0),1.,0,0,Screen.GetWidth(),Screen.GetHeight());
		double texscl = Screen.GetHeight()/2700.;
		if ( !gradtex ) gradtex = TexMan.CheckForTexture("graphics/title_grad.png",TexMan.Type_Any);
		Screen.DrawTexture(gradtex,false,0,Screen.GetHeight(),DTA_DestWidth,Screen.GetWidth(),DTA_DestHeight,256*CleanYFac_1,DTA_LegacyRenderStyle,STYLE_AddShaded,DTA_FillColor,Color(128,0,0),DTA_TopOffset,256);
		RenderSmokeLayer(GameSecs,true,.5,0,true);
		if ( !ibukitex[0] ) ibukitex[0] = TexMan.CheckForTexture("graphics/title_ibuki.png",TexMan.Type_Any);
		if ( !ibukitex[1] ) ibukitex[1] = TexMan.CheckForTexture("graphics/title_ibuki_smoke.png",TexMan.Type_Any);
		if ( !ibukitex[2] ) ibukitex[2] = TexMan.CheckForTexture("graphics/title_ibuki_eye.png",TexMan.Type_Any);
		double ofs;
		if ( CurState != StatCount ) ofs = 800;
		else ofs = 800*smerp(clamp(GameSecs/1.5,0.,1.));
		Screen.DrawTexture(ibukitex[0],false,Screen.GetWidth()/2+ofs*texscl,Screen.GetHeight()+80*texscl,DTA_ScaleX,texscl,DTA_ScaleY,texscl);
		Screen.DrawTexture(ibukitex[1],false,Screen.GetWidth()/2+ofs*texscl,Screen.GetHeight()+80*texscl,DTA_ScaleX,texscl,DTA_ScaleY,texscl,DTA_LegacyRenderStyle,STYLE_Add,DTA_Alpha,.5);
		Screen.DrawTexture(ibukitex[2],false,Screen.GetWidth()/2+ofs*texscl,Screen.GetHeight()+80*texscl,DTA_ScaleX,texscl,DTA_ScaleY,texscl,DTA_LegacyRenderStyle,STYLE_Add);
		double alf = clamp(glarestr/20.,0.,1.)**2;
		if ( alf > 0. ) Screen.DrawTexture(ibukitex[2],false,Screen.GetWidth()/2+ofs*texscl,Screen.GetHeight()+80*texscl,DTA_ScaleX,texscl,DTA_ScaleY,texscl,DTA_LegacyRenderStyle,STYLE_Add,DTA_Alpha,alf);
		RenderSmokeLayer(GameSecs,false,1.,0,true);
		Screen.DrawTexture(gradtex,false,0,Screen.GetHeight(),DTA_DestWidth,Screen.GetWidth(),DTA_DestHeight,64*CleanYFac_1,DTA_LegacyRenderStyle,STYLE_Shaded,DTA_FillColor,Color(128,0,0),DTA_TopOffset,256);
		if ( bcnt < GameTicRate ) Screen.Dim("White",1.-clamp(GameSecs,0.,1.),0,0,Screen.GetWidth(),Screen.GetHeight());
		if ( glarestr > 0 ) Screen.Dim("Red",(clamp(glarestr/20.,0.,1.)**2)*.3,0,0,Screen.GetWidth(),Screen.GetHeight());
	}
	override int DrawLF()
	{
		// TODO
		return 0;
	}
	override void DrawEL()
	{
		// TODO
	}
	override void Drawer( void )
	{
		FracTic = System.GetTimeFrac();
		switch ( CurState )
		{
		case StatCount:
			drawSWWMBg();
			drawLF();
			drawStats();
			break;
		case ShowNextLoc:
		case LeavingIntermission:
			drawSWWMBg();
			drawLF();
			drawStats();
			drawEL();
			break;
		default:
			drawNoState();
			break;
		}
	}
	override void Ticker( void )
	{
		bcnt++;
		if ( bcnt == 1 )
		{
			StartMusic();
			S_StartSound("aa12/titlefire",CHAN_WEAPON,CHANF_OVERLAP|CHANF_UI,1.,0.);
		}
		TickSmokeLayers();
		glarestr = max(glarestr-1,0);
		checkForAccelerate();
		switch (CurState)
		{
		case StatCount:
			updateStats();
			break;
		case ShowNextLoc:
			updateShowNextLoc();
			break;
		case NoState:
			updateNoState();
			break;
		case LeavingIntermission:
			// sorry nothing
			break;
		}
	}
	protected String TimeStr( int secs )
	{
		secs = max(secs,0);
		int h = secs/3600;
		int m = (secs/60)%60;
		int s = secs%60;
		if ( h ) return String.Format("%d\cm:\c-%02d\cm:\c-%02d",h,m,s);
		if ( m ) return String.Format("%d\cm:\c-%02d",m,s);
		return String.Format("%d",s);
	}
	protected int GetPct( int a, int b )
	{
		if ( a < 0 ) return 0;
		if ( b <= 0 ) return 100;	// for "missed" percentage
		return (a*100)/b;
	}

	override void initStats()
	{
		CurState = StatCount;
		acceleratestage = 0;
		sp_state = 1;
		cnt_kills[0] = cnt_items[0] = cnt_secret[0] = -1;
		cnt_time = cnt_par = -1;
		cnt_pause = GameTicRate*2;
		cnt_total_time = -1;
	}
	override void updateStats()
	{
		if ( acceleratestage && (sp_state != 10) )
		{
			acceleratestage = 0;
			sp_state = 10;
			S_StartSound("misc/w_pkup",CHAN_ITEM,CHANF_OVERLAP|CHANF_UI,1.,0.);
			glarestr = 20;
			cnt_kills[0] = Plrs[me].skills;
			cnt_items[0] = Plrs[me].sitems;
			cnt_secret[0] = Plrs[me].ssecret;
			cnt_time = Thinker.Tics2Seconds(Plrs[me].stime);
			cnt_par = wbs.partime/GameTicRate;
			cnt_total_time = Thinker.Tics2Seconds(wbs.totaltime);
		}
		if ( sp_state == 2 )
		{
			cnt_kills[0] += max((Plrs[me].skills-cnt_kills[0])/10,1);
			S_StartSound("misc/ricochet",CHAN_VOICE,CHANF_OVERLAP|CHANF_UI,1.,0.);
			if ( cnt_kills[0] >= Plrs[me].skills )
			{
				cnt_kills[0] = Plrs[me].skills;
				glarestr = 20;
				sp_state++;
			}
		}
		else if ( sp_state == 4 )
		{
			cnt_items[0] += max((Plrs[me].sitems-cnt_items[0])/10,1);
			S_StartSound("misc/ricochet",CHAN_VOICE,CHANF_OVERLAP|CHANF_UI,1.,0.);
			if ( cnt_items[0] >= Plrs[me].sitems )
			{
				cnt_items[0] = Plrs[me].sitems;
				glarestr = 20;
				sp_state++;
			}
		}
		else if ( sp_state == 6 )
		{
			cnt_secret[0] += max((Plrs[me].ssecret-cnt_secret[0])/10,1);
			S_StartSound("misc/ricochet",CHAN_VOICE,CHANF_OVERLAP|CHANF_UI,1.,0.);
			if ( cnt_secret[0] >= Plrs[me].ssecret )
			{
				cnt_secret[0] = Plrs[me].ssecret;
				glarestr = 20;
				sp_state++;
			}
		}
		else if ( sp_state == 8 )
		{
			int sec = Thinker.Tics2Seconds(Plrs[me].stime);
			int tsec = Thinker.Tics2Seconds(wbs.totaltime);
			int psec = wbs.partime/GameTicRate;
			S_StartSound("misc/ricochet",CHAN_VOICE,CHANF_OVERLAP|CHANF_UI,1.,0.);
			cnt_time += max((sec-cnt_time)/10,1);
			cnt_par += max((psec-cnt_par)/10,1);
			cnt_total_time += max((tsec-cnt_total_time)/10,1);
			if ( cnt_time >= sec ) cnt_time = sec;
			if ( cnt_total_time >= tsec ) cnt_total_time = tsec;
			if ( cnt_par >= psec )
			{
				cnt_par = psec;
				if ( cnt_time >= sec )
				{
					cnt_total_time = tsec;
					glarestr = 20;
					sp_state++;
				}
			}
		}
		else if ( sp_state == 10 )
		{
			if ( acceleratestage )
			{
				S_StartSound("misc/w_pkup",CHAN_ITEM,CHANF_OVERLAP|CHANF_UI,1.,0.);
				glarestr = 20;
				initShowNextLoc();
			}
		}
		else if ( sp_state&1 )
		{
			if ( !--cnt_pause )
			{
				sp_state++;
				cnt_pause = GameTicRate;
				if ( (sp_state == 2) && (wbs.maxkills <= 0) )
				{
					cnt_kills[0] = Plrs[me].skills;
					sp_state += 2;
				}
				if ( (sp_state == 4) && (wbs.maxitems <= 0) )
				{
					cnt_items[0] = Plrs[me].sitems;
					sp_state += 2;
				}
				if ( (sp_state == 6) && (wbs.maxsecret <= 0) )
				{
					cnt_secret[0] = Plrs[me].ssecret;
					sp_state += 2;
				}
			}
		}
	}
	override void drawStats( void )
	{
		// TODO
	}
}
